{"name": "Тест на уменьшение товара в корзине", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/cart_items\" class=\"header__control-btn header__cart\">...</a> is not clickable at point (1439, 39). Other element would receive the click: <div class=\"micro-alert-item id-micro-alert1733774981559 is-success-notice\">...</div>\n  (Session info: chrome=131.0.6778.109)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6F9476CF5+28821]\n\t(No symbol) [0x00007FF6F93E3880]\n\t(No symbol) [0x00007FF6F928578A]\n\t(No symbol) [0x00007FF6F92E0E8E]\n\t(No symbol) [0x00007FF6F92DE92C]\n\t(No symbol) [0x00007FF6F92DBAF6]\n\t(No symbol) [0x00007FF6F92DAA51]\n\t(No symbol) [0x00007FF6F92CCBA0]\n\t(No symbol) [0x00007FF6F92FF2FA]\n\t(No symbol) [0x00007FF6F92CC3F6]\n\t(No symbol) [0x00007FF6F92FF510]\n\t(No symbol) [0x00007FF6F931F412]\n\t(No symbol) [0x00007FF6F92FF0A3]\n\t(No symbol) [0x00007FF6F92CA778]\n\t(No symbol) [0x00007FF6F92CB8E1]\n\tGetHandleVerifier [0x00007FF6F97AFCED+3408013]\n\tGetHandleVerifier [0x00007FF6F97C745F+3504127]\n\tGetHandleVerifier [0x00007FF6F97BB63D+3455453]\n\tGetHandleVerifier [0x00007FF6F953BDFB+835995]\n\t(No symbol) [0x00007FF6F93EEB9F]\n\t(No symbol) [0x00007FF6F93EA854]\n\t(No symbol) [0x00007FF6F93EA9ED]\n\t(No symbol) [0x00007FF6F93DA1D9]\n\tBaseThreadInitThunk [0x00007FF8179F257D+29]\n\tRtlUserThreadStart [0x00007FF8192EAA48+40]", "trace": "self = <bbe.tests.test_change_count_product.TestChangeCountProduct object at 0x000000000462DA60>\ncart_page = <bbe.pages.cart_page.CartPage object at 0x0000000004679100>\n\n    @allure.title(\"Тест на уменьшение товара в корзине\")\n    def test_minus_product_from_card(self, cart_page):\n        with allure.step('Инициализация страницы'):\n            start_page = StartPage(self.driver)\n    \n        with allure.step('Открытие стартовой страницы'):\n            start_page.open_start_page()\n    \n        with allure.step(\"Проверка того, что открыта главная страница\"):\n            start_page.page_tittle(\"ЮKassa\")\n    \n        with allure.step('ID продукта, который хотим добавить в корзину'):\n            product_id = '253354771'\n    \n        with allure.step('Добавление продукта в корзину'):\n            start_page.add_product_to_cart(product_id)\n    \n        with allure.step('Проверка, что товар добавлен в корзину'):\n            assert start_page.is_product_added_to_cart(), \"Product was not added to cart\"\n    \n        with allure.step('Переход на страницу Корзина'):\n>           start_page.cart_move()\n\nbbe\\tests\\test_change_count_product.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbbe\\pages\\start_page.py:27: in cart_move\n    self.click(self.cart_icon_locator())\nbbe\\pages\\base_page.py:20: in click\n    element.click()\n..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000000004678F20>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF6F93DA1D9]\\\\n\\\\tBaseThreadInitThunk [0x00007FF8179F257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF8192EAA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/cart_items\" class=\"header__control-btn header__cart\">...</a> is not clickable at point (1439, 39). Other element would receive the click: <div class=\"micro-alert-item id-micro-alert1733774981559 is-success-notice\">...</div>\nE         (Session info: chrome=131.0.6778.109)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6F9476CF5+28821]\nE       \t(No symbol) [0x00007FF6F93E3880]\nE       \t(No symbol) [0x00007FF6F928578A]\nE       \t(No symbol) [0x00007FF6F92E0E8E]\nE       \t(No symbol) [0x00007FF6F92DE92C]\nE       \t(No symbol) [0x00007FF6F92DBAF6]\nE       \t(No symbol) [0x00007FF6F92DAA51]\nE       \t(No symbol) [0x00007FF6F92CCBA0]\nE       \t(No symbol) [0x00007FF6F92FF2FA]\nE       \t(No symbol) [0x00007FF6F92CC3F6]\nE       \t(No symbol) [0x00007FF6F92FF510]\nE       \t(No symbol) [0x00007FF6F931F412]\nE       \t(No symbol) [0x00007FF6F92FF0A3]\nE       \t(No symbol) [0x00007FF6F92CA778]\nE       \t(No symbol) [0x00007FF6F92CB8E1]\nE       \tGetHandleVerifier [0x00007FF6F97AFCED+3408013]\nE       \tGetHandleVerifier [0x00007FF6F97C745F+3504127]\nE       \tGetHandleVerifier [0x00007FF6F97BB63D+3455453]\nE       \tGetHandleVerifier [0x00007FF6F953BDFB+835995]\nE       \t(No symbol) [0x00007FF6F93EEB9F]\nE       \t(No symbol) [0x00007FF6F93EA854]\nE       \t(No symbol) [0x00007FF6F93EA9ED]\nE       \t(No symbol) [0x00007FF6F93DA1D9]\nE       \tBaseThreadInitThunk [0x00007FF8179F257D+29]\nE       \tRtlUserThreadStart [0x00007FF8192EAA48+40]\n\n..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Инициализация страницы", "status": "passed", "start": 1733774980573, "stop": 1733774980573}, {"name": "Открытие стартовой страницы", "status": "passed", "start": 1733774980573, "stop": 1733774980795}, {"name": "Проверка того, что открыта главная страница", "status": "passed", "start": 1733774980795, "stop": 1733774980811}, {"name": "ID продукта, который хотим добавить в корзину", "status": "passed", "start": 1733774980811, "stop": 1733774980811}, {"name": "Добавление продукта в корзину", "status": "passed", "start": 1733774980811, "stop": 1733774981257}, {"name": "Проверка, что товар добавлен в корзину", "status": "passed", "start": 1733774981257, "stop": 1733774981603}, {"name": "Переход на страницу Корзина", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/cart_items\" class=\"header__control-btn header__cart\">...</a> is not clickable at point (1439, 39). Other element would receive the click: <div class=\"micro-alert-item id-micro-alert1733774981559 is-success-notice\">...</div>\n  (Session info: chrome=131.0.6778.109)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6F9476CF5+28821]\n\t(No symbol) [0x00007FF6F93E3880]\n\t(No symbol) [0x00007FF6F928578A]\n\t(No symbol) [0x00007FF6F92E0E8E]\n\t(No symbol) [0x00007FF6F92DE92C]\n\t(No symbol) [0x00007FF6F92DBAF6]\n\t(No symbol) [0x00007FF6F92DAA51]\n\t(No symbol) [0x00007FF6F92CCBA0]\n\t(No symbol) [0x00007FF6F92FF2FA]\n\t(No symbol) [0x00007FF6F92CC3F6]\n\t(No symbol) [0x00007FF6F92FF510]\n\t(No symbol) [0x00007FF6F931F412]\n\t(No symbol) [0x00007FF6F92FF0A3]\n\t(No symbol) [0x00007FF6F92CA778]\n\t(No symbol) [0x00007FF6F92CB8E1]\n\tGetHandleVerifier [0x00007FF6F97AFCED+3408013]\n\tGetHandleVerifier [0x00007FF6F97C745F+3504127]\n\tGetHandleVerifier [0x00007FF6F97BB63D+3455453]\n\tGetHandleVerifier [0x00007FF6F953BDFB+835995]\n\t(No symbol) [0x00007FF6F93EEB9F]\n\t(No symbol) [0x00007FF6F93EA854]\n\t(No symbol) [0x00007FF6F93EA9ED]\n\t(No symbol) [0x00007FF6F93DA1D9]\n\tBaseThreadInitThunk [0x00007FF8179F257D+29]\n\tRtlUserThreadStart [0x00007FF8192EAA48+40]\n\n", "trace": "  File \"C:\\Users\\User\\BBE-UI-auto-project\\bbe\\tests\\test_change_count_product.py\", line 72, in test_minus_product_from_card\n    start_page.cart_move()\n  File \"C:\\Users\\User\\BBE-UI-auto-project\\bbe\\pages\\start_page.py\", line 27, in cart_move\n    self.click(self.cart_icon_locator())\n  File \"C:\\Users\\User\\BBE-UI-auto-project\\bbe\\pages\\base_page.py\", line 20, in click\n    element.click()\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1733774981603, "stop": 1733774982689}], "start": 1733774980573, "stop": 1733774982692, "uuid": "b3278794-4f17-4cdd-b4bb-7c7eb1f49378", "historyId": "34ff3469be7376c9e85b6c862e835063", "testCaseId": "34ff3469be7376c9e85b6c862e835063", "fullName": "bbe.tests.test_change_count_product.TestChangeCountProduct#test_minus_product_from_card", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "bbe.tests"}, {"name": "suite", "value": "test_change_count_product"}, {"name": "subSuite", "value": "TestChangeCountProduct"}, {"name": "host", "value": "HOME-PC"}, {"name": "thread", "value": "8760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "bbe.tests.test_change_count_product"}]}